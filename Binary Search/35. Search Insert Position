35. Search Insert Position

Share
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, 
return the index where it would be if it were inserted in order.

Java:
class Solution {
    public int searchInsert(int[] nums, int target) {
        int pivot, left = 0, right = nums.length - 1;
        
        while (left + 1 < right){
            pivot = left + (right - left) / 2;
            if (nums[pivot] <= target){
                left = pivot;
            }else{
                right = pivot;
            }
        }
        
        if (nums[left] >= target){
            return left;
        }else if (nums[right] >= target) {
            return right;
        }else{
            return right + 1;
        }
    }
}

Python:
class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        left, right = 0, len(nums) - 1
        while left + 1 < right:
            mid = (left + right) // 2
            
            if nums[mid] < target:
                left = mid
            
            else:
                right = mid
                
        print(left ,right)
                
        if nums[left] >= target:
            return left
        elif nums[right] >= target:
            return right
        else:
            return right + 1
