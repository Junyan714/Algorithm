"""
# Definition for a Node.
class Node:
    def __init__(self, val = 0, neighbors = None):
        self.val = val
        self.neighbors = neighbors if neighbors is not None else []
"""
import collections
class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        if not node:
            return node
        
        hash = {}
        hash[node] = Node(node.val, [])
        queue = collections.deque([node])
        
        while queue:
            cur = queue.popleft()
            
            for neighbor in cur.neighbors:
                if neighbor not in hash:
                    hash[neighbor] = Node(neighbor.val, [])
                    queue.append(neighbor)
                    
                hash[cur].neighbors.append(hash[neighbor])
                
        return hash[node]
